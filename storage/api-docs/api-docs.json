{
    "openapi": "3.0.0",
    "info": {
        "title": "Account Keeper API Documentation",
        "contact": {
            "email": "adityanaidu.work@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "description": "API endpoint to login an existing user with email and password returning a success message or error.",
                "operationId": "3673edffcdc18c06ac5aef5e2219d774",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's registered email address.",
                                        "type": "string",
                                        "example": "mohans@example.com"
                                    },
                                    "password": {
                                        "description": "User's password for account authentication.",
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Logged in successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged in successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Mohan Sharma"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "mohans@example.com"
                                                        },
                                                        "email_verified_at": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-07-04T19:52:26.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-07-04T19:52:26.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "example": "2025-07-04 19:52:53"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, something went wrong. Please try again."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Logout",
                "description": "API endpoint to logout an Auth user returning a success message or error.",
                "operationId": "5e29d25372d83a1ff5c3165a43f3302d",
                "responses": {
                    "200": {
                        "description": "User logged out successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out successfully."
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, something went wrong. Please try again."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Register",
                "description": "API endpoint to register a new user with fields for name, email, password, and confirmation, returning a   success message or error.",
                "operationId": "748a1acc92fb3e56f8f6ace55b5a9d24",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "User's full name",
                                        "type": "string",
                                        "example": "Mohan Sharma"
                                    },
                                    "email": {
                                        "description": "User's email address for registration.",
                                        "type": "string",
                                        "example": "mohans@example.com"
                                    },
                                    "password": {
                                        "description": "User's chosen password for account access.",
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "description": "Re-enter the password to confirm accuracy.",
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Mohan Sharma"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "mohans@example.com"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-07-04T16:09:33.000000Z"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-07-04T16:09:33.000000Z"
                                                        },
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 6
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "example": "2025-07-04 16:09:33"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, something went wrong. Please try again."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/transaction": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Make a new transaction",
                "description": "This endpoint allows the logged-in user to make a debit or credit transaction. The transaction will only be processed if the user has sufficient balance for debit transactions.",
                "operationId": "makeTransaction",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "trans_type",
                                    "trans_amount"
                                ],
                                "properties": {
                                    "trans_type": {
                                        "description": "Type of transaction: either debit or credit",
                                        "type": "string",
                                        "enum": [
                                            "debit",
                                            "credit"
                                        ]
                                    },
                                    "trans_amount": {
                                        "description": "The amount for the transaction",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "category_id": {
                                        "description": "The ID of the transaction category",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "description": "Description of the transaction",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The transaction has been completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the transaction operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "transaction": {
                                                    "properties": {
                                                        "trans_user_id": {
                                                            "description": "User ID associated with the transaction",
                                                            "type": "integer"
                                                        },
                                                        "trans_date": {
                                                            "description": "Date and time of the transaction",
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "trans_amount": {
                                                            "description": "Amount of the transaction",
                                                            "type": "number",
                                                            "format": "float"
                                                        },
                                                        "trans_type": {
                                                            "description": "Type of the transaction (debit or credit)",
                                                            "type": "string"
                                                        },
                                                        "category_id": {
                                                            "description": "ID of the transaction category",
                                                            "type": "integer"
                                                        },
                                                        "description": {
                                                            "description": "Description of the transaction",
                                                            "type": "string"
                                                        },
                                                        "updated_at": {
                                                            "description": "Timestamp of when the transaction was last updated",
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "created_at": {
                                                            "description": "Timestamp of when the transaction was created",
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "id": {
                                                            "description": "ID of the transaction",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "balance_after_transaction": {
                                                    "description": "User's balance after the transaction",
                                                    "type": "number",
                                                    "format": "float"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "description": "Errors, if any",
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request due to validation errors or insufficient balance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the transaction operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Details of the error",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the transaction operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Details of the error",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/daily-closing-bal": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get daily closing balance",
                "description": "This endpoint returns the daily closing balance for a specified number of days. If no number of days is specified, it defaults to 90 days.",
                "operationId": "dailyClosingBalance",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "requested_days": {
                                        "description": "The number of days to fetch the closing balance for. Defaults to 90 days if not provided.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The transaction has been completed successfully. Returns the closing balance for the requested number of days.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "requested_for_days": {
                                                    "description": "The number of days for which the closing balance was requested",
                                                    "type": "integer"
                                                },
                                                "closing_balance": {
                                                    "description": "Key-value pairs of date and closing balance",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "description": "Errors, if any",
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request due to validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Details of the error",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Details of the error",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/average-bal": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get average balance",
                "description": "This endpoint calculates and returns the average balance for a specified number of days. If no number of days is specified, it defaults to 90 days.",
                "operationId": "averageBalance",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "requested_days": {
                                        "description": "The number of days to calculate the average balance for. Defaults to 90 days if not provided.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The average balance has been calculated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "requested_for_days": {
                                                    "description": "The number of days for which the average balance was calculated",
                                                    "type": "integer"
                                                },
                                                "average_balance": {
                                                    "description": "The calculated average balance",
                                                    "type": "number",
                                                    "format": "float"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "description": "Errors, if any",
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request due to validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Details of the error",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Details of the error",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/average-segment-bal": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get average segment balance",
                "description": "This endpoint calculates and returns the average balance for two segments: the first N days and the last N days within a specified total number of days. If no number of days is specified, it defaults to 90 total days, with the first 30 days and the last 30 days being compared.",
                "operationId": "averageSegmentBalance",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "totalNDays": {
                                        "description": "The total number of days to consider. Defaults to 90 days if not provided.",
                                        "type": "integer"
                                    },
                                    "firstNDays": {
                                        "description": "The number of days from the start to calculate the average balance. Defaults to 30 days if not provided.",
                                        "type": "integer"
                                    },
                                    "lastNDays": {
                                        "description": "The number of days from the end to calculate the average balance. Defaults to 30 days if not provided.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The average segment balances have been calculated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "first_n_days": {
                                                    "description": "The average balance for the first N days",
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "last_n_days": {
                                                    "description": "The average balance for the last N days",
                                                    "type": "number",
                                                    "format": "float"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "description": "Errors, if any",
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request due to validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Details of the error",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Details of the error",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/last-n-days-income": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get last N days income",
                "description": "This endpoint calculates and returns the total income for the last N days, excluding a specific category ID if provided. Defaults to the last 30 days and excludes category ID 18020004 if not specified.",
                "operationId": "lastNDaysIncome",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "lastNDays": {
                                        "description": "The number of days to calculate income for. Defaults to 30 days if not provided.",
                                        "type": "integer"
                                    },
                                    "exceptCatID": {
                                        "description": "Category ID to exclude from the income calculation. Defaults to 18020004 if not provided.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The income amount has been calculated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "income_amount": {
                                                    "description": "The total income amount for the specified period",
                                                    "type": "number",
                                                    "format": "float"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "description": "Errors, if any",
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request due to validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Details of the error",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Details of the error",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/debit-trans-count": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get debit transaction count for last N days",
                "description": "This endpoint returns the count of debit transactions for the last N days for the authenticated user. Defaults to the last 30 days if not specified.",
                "operationId": "debitTransactionCountLastNDays",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "lastNDays": {
                                        "description": "The number of days to count debit transactions for. Defaults to 30 days if not provided.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The debit transaction count has been retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "debit_count": {
                                                    "description": "The count of debit transactions for the specified period",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "description": "Errors, if any",
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request due to validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Details of the error",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Details of the error",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/income-over-n": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get income sum for transactions over a specified amount",
                "description": "This endpoint calculates and returns the sum of income (credit transactions) where the transaction amount is greater than a specified value for the authenticated user. Defaults to transaction amounts greater than 15 if not specified.",
                "operationId": "incomeOverN",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "transAmtGreaterThan": {
                                        "description": "The minimum transaction amount to filter income. Defaults to 15 if not provided.",
                                        "type": "number",
                                        "format": "float"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The sum of income has been calculated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "income_sum": {
                                                    "description": "The sum of income where transaction amount is greater than the specified value",
                                                    "type": "number",
                                                    "format": "float"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "description": "Errors, if any",
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request due to validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Details of the error",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "description": "Status of the operation",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Details of the error",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Transaction",
            "description": "Transaction"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearer": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}